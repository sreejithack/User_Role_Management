{
    "swagger": "2.0",
    "info": {
      "description": "This is the documentation for User Role Management",
      "version": "1.0.0",
      "title": "User Role Management",
      "termsOfService": "http://swagger.io/terms/",
      "contact": {
        "name": "sreejitha",
        "email": "cksreejitha@gmail.com"
      },
      "license": {
        "name": "Apache 2.0",
        "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
      }
    },
    "host": "localhost:3000",
    "basePath": "/api",
    "tags": [
      {
        "name": "User Role Management",
        "description": "Everything about  User Role Management"
      },
      {
        "name": "Role",
        "description": "Operations on Role"
      },
      {
        "name": "User",
        "description": "Operations on User"
      },
      {
        "name": "Module",
        "description": "Operations on Module"
      }
      
    ],
    "schemes": [
      "http"
    ],
    "paths": {
      "/user/create": {
        "post": {
          "tags": [
            "User"
          ],
          "summary": "Add a new User to the system",
          "description": "",
          "operationId": "createUser",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "description": "User object that needs to be added to the store",
              "required": true,
              "schema": {
                "$ref": "#/definitions/user"
              }
            }
          ],
          "responses": {
            "405": {
              "description": "Invalid input"
            }
          }
        }
      },
      "/user/update/{id}": {
        "put": {
          "tags": [
            "User"
          ],
          "summary": "Update a user in the system",
          "description": "",
          "operationId": "updateUser",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID of user that needs to be updated",
              "required": true,
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "description": "User object that needs to be added to the store",
              "required": true,
              "schema": {
                "$ref": "#/definitions/user"
              }
            }
          ],
          "responses": {
            "405": {
              "description": "Invalid input"
            }
          }
        }
      },
      "/user/all": {
        "get": {
          "tags": [
            "User"
          ],
          "summary": "Finds All Users",
          "description": "",
          "operationId": "findAll",
          "produces": [
            
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/user"
                }
              }
            },
            "400": {
              "description": "Invalid status value"
            }
          }
        }
      },
      "/user/{id}": {
        "get": {
          "tags": [
            "User"
          ],
          "summary": "get the details of the user",
          "description": "get the details of the user",
          "operationId": "findOne",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID of user that needs to be updated",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/user"
                }
              }
            },
            "400": {
              "description": "Invalid status value"
            }
          }
        }
      },
      "/user/delete/{id}": {
        "delete": {
          "tags": [
            "User"
          ],
          "summary": "Deletes a user",
          "description": "",
          "operationId": "deleteUser",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "user id to delete",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "400": {
              "description": "Invalid ID supplied"
            },
            "404": {
              "description": "User not found"
            }
          }
        }
      },
      "/user/login": {
        "post": {
          "tags": [
            "Login"
          ],
          "summary": "login",
          "description": "",
          "operationId": "login",
          "consumes": [
            "application/json"
          ],
          "produces": [
            
            "application/json"
          ],
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "description": "User login",
              "required": true,
              "schema": {
                "$ref": "#/definitions/login"
              }
            }
          ],
          "responses": {
            "405": {
              "description": "Invalid input"
            }
          }
        }
      },
      "/role/create": {
        "post": {
          "tags": [
            "Role"
          ],
          "summary": "Add a new Role to the system",
          "description": "",
          "operationId": "createRoler",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "description": "Role object that needs to be added to the store",
              "required": true,
              "schema": {
                "$ref": "#/definitions/role"
              }
            }
          ],
          "responses": {
            "405": {
              "description": "Invalid input"
            }
          }
        }
      },
      "/role/update/{id}": {
        "put": {
          "tags": [
            "Role"
          ],
          "summary": "Update a role in the system",
          "description": "",
          "operationId": "updateRole",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID of Role that needs to be updated",
              "required": true,
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "description": "ID of Role that needs to be updated",
              "required": true,
              "schema": {
                "$ref": "#/definitions/role"
              }
            }
          ],
          "responses": {
            "405": {
              "description": "Invalid input"
            }
          }
        }
      },
      "/role/all": {
        "get": {
          "tags": [
            "Role"
          ],
          "summary": "Finds All Role",
          "description": "",
          "operationId": "findAll",
          "produces": [
            
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/role"
                }
              }
            },
            "400": {
              "description": "Invalid status value"
            }
          }
        }
      },
      "/role/{id}": {
        "get": {
          "tags": [
            "Role"
          ],
          "summary": "get the details of the role",
          "description": "get the details of the role",
          "operationId": "findOne",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID of role that needs to be updated",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/role"
                }
              }
            },
            "400": {
              "description": "Invalid status value"
            }
          }
        }
      },
      "/role/delete/{id}": {
        "delete": {
          "tags": [
            "Role"
          ],
          "summary": "Deletes a role",
          "description": "",
          "operationId": "deleteRole",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "role id to delete",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "400": {
              "description": "Invalid ID supplied"
            },
            "404": {
              "description": "Role not found"
            }
          }
        }
      },
      "/module/create": {
        "post": {
          "tags": [
            "Module"
          ],
          "summary": "Add a new module to the system",
          "description": "",
          "operationId": "createModule",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "description": "Module object that needs to be added to the store",
              "required": true,
              "schema": {
                "$ref": "#/definitions/module"
              }
            }
          ],
          "responses": {
            "405": {
              "description": "Invalid input"
            }
          }
        }
      },
      "/module/update/{id}": {
        "put": {
          "tags": [
            "Role"
          ],
          "summary": "Update a module in the system",
          "description": "",
          "operationId": "updateModule",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID of module that needs to be updated",
              "required": true,
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "description": "ID of module that needs to be updated",
              "required": true,
              "schema": {
                "$ref": "#/definitions/module"
              }
            }
          ],
          "responses": {
            "405": {
              "description": "Invalid input"
            }
          }
        }
      },
      "/module/all": {
        "get": {
          "tags": [
            "Module"
          ],
          "summary": "Finds All Module",
          "description": "",
          "operationId": "findAll",
          "produces": [
            
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/role"
                }
              }
            },
            "400": {
              "description": "Invalid status value"
            }
          }
        }
      },
      "/module/{id}": {
        "get": {
          "tags": [
            "Role"
          ],
          "summary": "get the details of the module",
          "description": "get the details of the module",
          "operationId": "findOne",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID of module that needs to be updated",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/module"
                }
              }
            },
            "400": {
              "description": "Invalid status value"
            }
          }
        }
      },
      "/module/delete/{id}": {
        "delete": {
          "tags": [
            "Module"
          ],
          "summary": "Deletes a module",
          "description": "",
          "operationId": "deleteModule",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "role id to module",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "400": {
              "description": "Invalid ID supplied"
            },
            "404": {
              "description": "module not found"
            }
          }
        }
      }
    },
    "securityDefinitions": {
      "petstore_auth": {
        "type": "oauth2",
        "authorizationUrl": "http://user_role.swagger.io/oauth/dialog",
        "flow": "implicit",
        "scopes": {
          "write:role": "modify User Role",
          "read:role": "read User Role"
        }
      },
      "api_key": {
        "type": "apiKey",
        "name": "api_key",
        "in": "header"
      }
    },
    "definitions": {
      "user": {
        "type": "object",
        "properties": {
          
          "userName": {
            "type": "string",
            "description": "userName"
          },
          
          "userRole": {
            "type": "string",
            "description": "userRole"
          },
          "password": {
            "type": "string",
            "description": "password"
          }
          
        }
      },
      "role": {
        "type": "object",
        "properties": {
          
          "roleName": {
            "type": "string",
            "description": "roleName"
          },
          "status": {
            "type": "string",
            "description": "status"
          }
        }
      },
      "login": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string",
            "description": "userName"
          },
          "password": {
            "type": "string",
            "description": "password"
          }
        }
      },
      "module": {
        "type": "object",
        "properties": {
          
          "moduleName": {
            "type": "string",
            "description": "moduleName"
          },
          "user": {
            "type": "string",
            "description": "user"
          },
          "status": {
            "type": "string",
            "description": "status"
          }
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "externalDocs": {
      "description": "Find out more about Swagger",
      "url": "http://swagger.io"
    }
  }